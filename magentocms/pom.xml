<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.talend.components</groupId>
    <artifactId>connectors-se</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>magentocms</artifactId>

  <name>Components :: Magento CMS</name>

  <properties>
    <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
    <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>

    <magento-admin-name>admin</magento-admin-name>
    <magento-admin-password>admin12</magento-admin-password>
    <surefire.version>2.22.0</surefire.version>
    <failsafe.version>2.22.0</failsafe.version>
    <junit-platform-surefire-provider.version>1.2.0</junit-platform-surefire-provider.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.talend.sdk.component</groupId>
      <artifactId>component-runtime-beam</artifactId>
      <version>${component-runtime.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.beam</groupId>
      <artifactId>beam-runners-direct-java</artifactId>
      <version>${beam.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit5.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <configuration>
            <argLine>${surefireArgLine}</argLine>
            <forkCount>1</forkCount>
            <reuseForks>true</reuseForks>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.junit.platform</groupId>
              <artifactId>junit-platform-surefire-provider</artifactId>
              <version>${junit-platform-surefire-provider.version}</version>
            </dependency>
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>${junit5.version}</version>
            </dependency>
            <dependency>
              <groupId>org.junit.vintage</groupId>
              <artifactId>junit-vintage-engine</artifactId>
              <version>${junit5.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${failsafe.version}</version>
          <configuration>
            <argLine>${failSafeArgLine}</argLine>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.junit.platform</groupId>
              <artifactId>junit-platform-surefire-provider</artifactId>
              <version>${junit-platform-surefire-provider.version}</version>
            </dependency>
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>${junit5.version}</version>
            </dependency>
            <dependency>
              <groupId>org.junit.vintage</groupId>
              <artifactId>junit-vintage-engine</artifactId>
              <version>${junit5.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>

            <execution>
              <id>pre-integration-test</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                <propertyName>failSafeArgLine</propertyName>
              </configuration>
            </execution>

            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              </configuration>
            </execution>

            <execution>
              <id>post-unit-test</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
              </configuration>
            </execution>

            <execution>
              <id>merge-results</id>
              <phase>verify</phase>
              <goals>
                <goal>merge</goal>
              </goals>
              <configuration>
                <fileSets>
                  <fileSet>
                    <directory>${project.build.directory}/coverage-reports</directory>
                    <includes>
                      <include>*.exec</include>
                    </includes>
                  </fileSet>
                </fileSets>
                <destFile>${project.build.directory}/coverage-reports/aggregate.exec</destFile>
              </configuration>
            </execution>

            <execution>
              <id>post-merge-report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/coverage-reports/aggregate.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <!--get free port for magento container-->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.version}</version>
        <configuration>
          <systemPropertyVariables>
            <magentoHttpPort>${magento.http.port}</magentoHttpPort>
            <magentoHttpPortSecure>${magento.http.port.secure}</magentoHttpPortSecure>
            <magentoAdminName>${magento-admin-name}</magentoAdminName>
            <magentoAdminPassword>${magento-admin-password}</magentoAdminPassword>

            <talend.component.junit.handler.state>static</talend.component.junit.handler.state>
            <!--<talend.beam.job.enforceImmutability>false</talend.beam.job.enforceImmutability>-->
            <!--<talend.beam.job.enforceEncodability>false</talend.beam.job.enforceEncodability>-->
            <!--
               You can activate the targetParallelism to control the parallelism of the test pipeline.
               You can also set it to 1 to debug more easily
            -->
            <!--<talend.beam.job.targetParallelism>1</talend.beam.job.targetParallelism>-->
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>org.talend.sdk.component:component-runtime-beam
                </classpathDependencyExclude>
                <classpathDependencyExclude>org.apache.beam:beam-runners-direct-java
                </classpathDependencyExclude>
              </classpathDependencyExcludes>
            </configuration>
          </execution>
          <!--<execution>-->
            <!--<id>beam-test</id>-->
            <!--<phase>test</phase>-->
            <!--<goals>-->
              <!--<goal>integration-test</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--&lt;!&ndash;<testFailureIgnore>true</testFailureIgnore>&ndash;&gt;-->
            <!--</configuration>-->
          <!--</execution>-->
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <magentoHttpPort>${magento.http.port}</magentoHttpPort>
            <magentoHttpPortSecure>${magento.http.port.secure}</magentoHttpPortSecure>
            <magentoAdminName>${magento-admin-name}</magentoAdminName>
            <magentoAdminPassword>${magento-admin-password}</magentoAdminPassword>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!--get free port for magento's docker container-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <phase>process-resources</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <configuration>
              <portNames>
                <portName>magento.http.port</portName>
                <portName>magento.http.port.secure</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--start/stop magento's docker containers for tests-->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <skip>${skipTests}</skip>
          <!--<showLogs>true</showLogs>-->
          <registry>${talend-docker-registry}</registry>
          <images>
            <image>
              <alias>magento</alias>
              <name>sbovsunovskyi/components-integration-test-magentocms:1.0.0</name>
              <run>
                <ports>
                  <port>magento.http.port:80</port>
                  <port>magento.http.port.secure:443</port>
                </ports>
                <env>
                  <MAGENTO_BASE_URL>http://${docker.host.address}:${magento.http.port}
                  </MAGENTO_BASE_URL>
                  <MAGENTO_BASE_URL_SECURE>
                    https://${docker.host.address}:${magento.http.port.secure}
                  </MAGENTO_BASE_URL_SECURE>
                  <MAGENTO_USE_SECURE>1</MAGENTO_USE_SECURE>
                  <MAGENTO_USE_SECURE_ADMIN>1</MAGENTO_USE_SECURE_ADMIN>
                </env>
                <wait>
                  <http>
                    <url>http://${docker.host.address}:${magento.http.port}</url>
                  </http>
                  <time>60000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>

        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <configuration combine.self="override">
          <encoding>UTF-8</encoding>
          <configFile>talend_java_eclipse_formatter.xml</configFile>
          <!--<lineEnding>CRLF</lineEnding>-->
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
